"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Thoughts = void 0;
const mongoose_1 = require("mongoose");
const ReactionSchema = new mongoose_1.Schema({
    reactionId: {
        type: mongoose_1.Schema.Types.ObjectId,
        default: () => new mongoose_1.Types.ObjectId(),
    },
    reactionBody: {
        type: String,
        required: `Must contain text`,
        validate: [({ length }) => length >= 1 && length <= 280],
    },
    username: {
        type: mongoose_1.Schema.Types.ObjectId,
        ref: "User",
        required: `Must have a Username`,
    },
    createdAt: {
        type: Date,
        default: Date.now,
    },
}, {
    id: false,
});
const ThoughtsSchema = new mongoose_1.Schema({
    thoughtText: {
        type: String,
        required: `Text content is required.`,
        validate: [
            ({ length }) => length >= 1 && length <= 280,
            `Thought must be between 1-280 characters long.`,
        ],
    },
    createdAt: {
        type: Date,
        default: Date.now,
    },
    username: {
        type: String,
        required: `Username is required.`,
    },
    reactions: [ReactionSchema],
}, {
    id: false,
});
exports.Thoughts = (0, mongoose_1.model)("Thoughts", ThoughtsSchema);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhvdWdodHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbW9kZWxzL3Rob3VnaHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHVDQUFnRDtBQUVoRCxNQUFNLGNBQWMsR0FBRyxJQUFJLGlCQUFNLENBQy9CO0lBQ0UsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLGlCQUFNLENBQUMsS0FBSyxDQUFDLFFBQVE7UUFDM0IsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksZ0JBQUssQ0FBQyxRQUFRLEVBQUU7S0FDcEM7SUFDRCxZQUFZLEVBQUU7UUFDWixJQUFJLEVBQUUsTUFBTTtRQUNaLFFBQVEsRUFBRSxtQkFBbUI7UUFDN0IsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLE1BQU0sSUFBSSxHQUFHLENBQUM7S0FDekQ7SUFDRCxRQUFRLEVBQUU7UUFDUixJQUFJLEVBQUUsaUJBQU0sQ0FBQyxLQUFLLENBQUMsUUFBUTtRQUMzQixHQUFHLEVBQUUsTUFBTTtRQUNYLFFBQVEsRUFBRSxzQkFBc0I7S0FDakM7SUFDRCxTQUFTLEVBQUU7UUFDVCxJQUFJLEVBQUUsSUFBSTtRQUNWLE9BQU8sRUFBRSxJQUFJLENBQUMsR0FBRztLQUNsQjtDQUNGLEVBQ0Q7SUFDRSxFQUFFLEVBQUUsS0FBSztDQUNWLENBQ0YsQ0FBQztBQUVGLE1BQU0sY0FBYyxHQUFHLElBQUksaUJBQU0sQ0FDL0I7SUFDRSxXQUFXLEVBQUU7UUFDWCxJQUFJLEVBQUUsTUFBTTtRQUNaLFFBQVEsRUFBRSwyQkFBMkI7UUFDckMsUUFBUSxFQUFFO1lBQ1IsQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLE1BQU0sSUFBSSxHQUFHO1lBQzVDLGdEQUFnRDtTQUNqRDtLQUNGO0lBQ0QsU0FBUyxFQUFFO1FBQ1QsSUFBSSxFQUFFLElBQUk7UUFDVixPQUFPLEVBQUUsSUFBSSxDQUFDLEdBQUc7S0FDbEI7SUFDRCxRQUFRLEVBQUU7UUFDUixJQUFJLEVBQUUsTUFBTTtRQUNaLFFBQVEsRUFBRSx1QkFBdUI7S0FDbEM7SUFDRCxTQUFTLEVBQUUsQ0FBQyxjQUFjLENBQUM7Q0FDNUIsRUFDRDtJQUNFLEVBQUUsRUFBRSxLQUFLO0NBQ1YsQ0FDRixDQUFDO0FBRVcsUUFBQSxRQUFRLEdBQUcsSUFBQSxnQkFBSyxFQUFDLFVBQVUsRUFBRSxjQUFjLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSwgbW9kZWwsIFR5cGVzIH0gZnJvbSBcIm1vbmdvb3NlXCI7XHJcblxyXG5jb25zdCBSZWFjdGlvblNjaGVtYSA9IG5ldyBTY2hlbWEoXHJcbiAge1xyXG4gICAgcmVhY3Rpb25JZDoge1xyXG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgIGRlZmF1bHQ6ICgpID0+IG5ldyBUeXBlcy5PYmplY3RJZCgpLFxyXG4gICAgfSxcclxuICAgIHJlYWN0aW9uQm9keToge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIHJlcXVpcmVkOiBgTXVzdCBjb250YWluIHRleHRgLFxyXG4gICAgICB2YWxpZGF0ZTogWyh7IGxlbmd0aCB9KSA9PiBsZW5ndGggPj0gMSAmJiBsZW5ndGggPD0gMjgwXSxcclxuICAgIH0sXHJcbiAgICB1c2VybmFtZToge1xyXG4gICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgIHJlZjogXCJVc2VyXCIsXHJcbiAgICAgIHJlcXVpcmVkOiBgTXVzdCBoYXZlIGEgVXNlcm5hbWVgLFxyXG4gICAgfSxcclxuICAgIGNyZWF0ZWRBdDoge1xyXG4gICAgICB0eXBlOiBEYXRlLFxyXG4gICAgICBkZWZhdWx0OiBEYXRlLm5vdyxcclxuICAgIH0sXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogZmFsc2UsXHJcbiAgfVxyXG4pO1xyXG5cclxuY29uc3QgVGhvdWdodHNTY2hlbWEgPSBuZXcgU2NoZW1hKFxyXG4gIHtcclxuICAgIHRob3VnaHRUZXh0OiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgcmVxdWlyZWQ6IGBUZXh0IGNvbnRlbnQgaXMgcmVxdWlyZWQuYCxcclxuICAgICAgdmFsaWRhdGU6IFtcclxuICAgICAgICAoeyBsZW5ndGggfSkgPT4gbGVuZ3RoID49IDEgJiYgbGVuZ3RoIDw9IDI4MCxcclxuICAgICAgICBgVGhvdWdodCBtdXN0IGJlIGJldHdlZW4gMS0yODAgY2hhcmFjdGVycyBsb25nLmAsXHJcbiAgICAgIF0sXHJcbiAgICB9LFxyXG4gICAgY3JlYXRlZEF0OiB7XHJcbiAgICAgIHR5cGU6IERhdGUsXHJcbiAgICAgIGRlZmF1bHQ6IERhdGUubm93LFxyXG4gICAgfSxcclxuICAgIHVzZXJuYW1lOiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgcmVxdWlyZWQ6IGBVc2VybmFtZSBpcyByZXF1aXJlZC5gLFxyXG4gICAgfSxcclxuICAgIHJlYWN0aW9uczogW1JlYWN0aW9uU2NoZW1hXSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBmYWxzZSxcclxuICB9XHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgVGhvdWdodHMgPSBtb2RlbChcIlRob3VnaHRzXCIsIFRob3VnaHRzU2NoZW1hKTtcclxuIl19