"use strict";
const models_1 = require("../models");
const userController = {
    async getAllUsers(req, res) {
        try {
            const users = await models_1.User.find({});
            res.json(users);
        }
        catch (err) {
            if (err)
                throw err;
        }
    },
    async getUser({ params }, res) {
        try {
            const user = await models_1.User.findById(params.id);
            if (!user) {
                res.status(404).send(`User Not Found`);
                return;
            }
            res.json(user);
        }
        catch (err) {
            if (err)
                throw err;
        }
    },
    async createUser({ body }, res) {
        try {
            const newUser = await models_1.User.create(body);
            res.status(201).send(`User ${newUser.username} created`);
        }
        catch (err) {
            if (err)
                throw err;
        }
    },
    async updateUser({ params, body }, res) {
        try {
            const user = await models_1.User.findByIdAndUpdate(params.id, body);
            res.status(200).send(`User ${user} updated`);
        }
        catch (err) {
            if (err)
                throw err;
        }
    },
    async deleteUser({ params }, res) {
        try {
            const user = await models_1.User.findByIdAndDelete(params.id);
            res.status(200).send(`User #${params.id} deleted`);
        }
        catch (err) {
            if (err)
                throw err;
        }
    },
};
module.exports = userController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NvbnRyb2xsZXJzL3VzZXItY29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0NBQWlDO0FBRWpDLE1BQU0sY0FBYyxHQUFHO0lBRXJCLEtBQUssQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLEdBQUc7UUFDeEIsSUFBSTtZQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sYUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNsQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2pCO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixJQUFJLEdBQUc7Z0JBQUUsTUFBTSxHQUFHLENBQUM7U0FDcEI7SUFDSCxDQUFDO0lBR0QsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEdBQUc7UUFDM0IsSUFBSTtZQUNGLE1BQU0sSUFBSSxHQUFHLE1BQU0sYUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDNUMsSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDVCxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO2dCQUN2QyxPQUFPO2FBQ1I7WUFDRCxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2hCO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixJQUFJLEdBQUc7Z0JBQUUsTUFBTSxHQUFHLENBQUM7U0FDcEI7SUFDSCxDQUFDO0lBR0QsS0FBSyxDQUFDLFVBQVUsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUc7UUFDNUIsSUFBSTtZQUNGLE1BQU0sT0FBTyxHQUFHLE1BQU0sYUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN4QyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLE9BQU8sQ0FBQyxRQUFRLFVBQVUsQ0FBQyxDQUFDO1NBQzFEO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixJQUFJLEdBQUc7Z0JBQUUsTUFBTSxHQUFHLENBQUM7U0FDcEI7SUFDSCxDQUFDO0lBR0QsS0FBSyxDQUFDLFVBQVUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsRUFBRSxHQUFHO1FBQ3BDLElBQUk7WUFDRixNQUFNLElBQUksR0FBRyxNQUFNLGFBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzNELEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxVQUFVLENBQUMsQ0FBQztTQUM5QztRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1osSUFBSSxHQUFHO2dCQUFFLE1BQU0sR0FBRyxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQztJQUdELEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxHQUFHO1FBQzlCLElBQUk7WUFDRixNQUFNLElBQUksR0FBRyxNQUFNLGFBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDckQsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxNQUFNLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQztTQUNwRDtRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1osSUFBSSxHQUFHO2dCQUFFLE1BQU0sR0FBRyxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQztDQUNGLENBQUM7QUFFRixpQkFBUyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyIH0gZnJvbSBcIi4uL21vZGVsc1wiO1xyXG5cclxuY29uc3QgdXNlckNvbnRyb2xsZXIgPSB7XHJcbiAgLy8gZ2V0IGFsbCB1c2VycyBkYXRhXHJcbiAgYXN5bmMgZ2V0QWxsVXNlcnMocmVxLCByZXMpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgVXNlci5maW5kKHt9KTtcclxuICAgICAgcmVzLmpzb24odXNlcnMpO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIGlmIChlcnIpIHRocm93IGVycjtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICAvLyBnZXQgc2luZ2xlIHVzZXIgZGF0YSBmcm9tIGlkXHJcbiAgYXN5bmMgZ2V0VXNlcih7IHBhcmFtcyB9LCByZXMpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkKHBhcmFtcy5pZCk7XHJcbiAgICAgIGlmICghdXNlcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKGBVc2VyIE5vdCBGb3VuZGApO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICByZXMuanNvbih1c2VyKTtcclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgLy8gY3JlYXRlIG5ldyB1c2VyXHJcbiAgYXN5bmMgY3JlYXRlVXNlcih7IGJvZHkgfSwgcmVzKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgVXNlci5jcmVhdGUoYm9keSk7XHJcbiAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKGBVc2VyICR7bmV3VXNlci51c2VybmFtZX0gY3JlYXRlZGApO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIGlmIChlcnIpIHRocm93IGVycjtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICAvLyB1cGRhdGUgdXNlciBkYXRhXHJcbiAgYXN5bmMgdXBkYXRlVXNlcih7IHBhcmFtcywgYm9keSB9LCByZXMpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkQW5kVXBkYXRlKHBhcmFtcy5pZCwgYm9keSk7XHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKGBVc2VyICR7dXNlcn0gdXBkYXRlZGApO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIGlmIChlcnIpIHRocm93IGVycjtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICAvLyBkZWxldGUgdXNlciBkYXRhXHJcbiAgYXN5bmMgZGVsZXRlVXNlcih7IHBhcmFtcyB9LCByZXMpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkQW5kRGVsZXRlKHBhcmFtcy5pZCk7XHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKGBVc2VyICMke3BhcmFtcy5pZH0gZGVsZXRlZGApO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIGlmIChlcnIpIHRocm93IGVycjtcclxuICAgIH1cclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0ID0gdXNlckNvbnRyb2xsZXI7XHJcbiJdfQ==